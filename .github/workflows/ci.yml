name: Ubuntu CI

on:
  push:
    branches:
    - master
    tags:
    - "*"
  pull_request:
  schedule:
    - cron: '30 2 * * 1,4' # Every Monday and Thursday @ 2h30am UTC

env:
  POETRY_VERSION: 1.6.1

jobs:
  check_skip:
    runs-on: ubuntu-latest
    if: |
      !contains(format('{0} {1} {2}', github.event.head_commit.message, github.event.pull_request.title, github.event.pull_request.body), '[skip ci]')
    steps:
      - run: |
          cat <<'MESSAGE'
          github.event_name: ${{ toJson(github.event_name) }}
          github.event:
          ${{ toJson(github.event) }}
          MESSAGE
  test:
    needs: check_skip
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Test poetry run
        run: poetry --version

      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup a virtual environment appropriate to the python version
        run: poetry env use python${{ matrix.python-version }}

      - name: Install xarray-fits
        run: poetry install --extras "testing"

      - name: Test xarray-fits
        run: poetry run py.test -s -vvv tests/

      # - name: Debug with tmate on failure
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3

  upload-to-test-pypi:
    name: Upload release to Test PyPI
    needs: [test]
    runs-on: ubuntu-latest
    environment:
      name: release-test
    permissions:
      id-token: write
    steps:
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Build distributions
        run: poetry build

      - name: Publish package distributions to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
        continue-on-error: true

  upload-to-pypi:
    name: Upload release to PyPI
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [test]
    runs-on: ubuntu-latest
    environment:
      name: release
    permissions:
      id-token: write
    steps:
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Build distributions
        run: poetry build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
